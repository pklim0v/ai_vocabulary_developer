"""Updated User model. Added UserAgreement and PrivacyPolicy models

Revision ID: 0b470c3d561a
Revises: f16eb3e06651
Create Date: 2025-05-31 01:31:33.184028

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0b470c3d561a'
down_revision: Union[str, None] = 'f16eb3e06651'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('privacy_policies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(length=10), nullable=False),
    sa.Column('url', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('activated_at', sa.DateTime(), nullable=True),
    sa.Column('activated_by_id', sa.Integer(), nullable=True),
    sa.Column('deactivated_at', sa.DateTime(), nullable=True),
    sa.Column('deactivated_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activated_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deactivated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('privacy_policies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_privacy_policies_is_active'), ['is_active'], unique=False)

    op.create_table('user_agreements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(length=10), nullable=False),
    sa.Column('url', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('activated_at', sa.DateTime(), nullable=True),
    sa.Column('activated_by_id', sa.Integer(), nullable=True),
    sa.Column('deactivated_at', sa.DateTime(), nullable=True),
    sa.Column('deactivated_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activated_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deactivated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_agreements', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_agreements_is_active'), ['is_active'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('agreement_accepted_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('policy_accepted_at', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('policy_accepted_at')
        batch_op.drop_column('agreement_accepted_at')

    with op.batch_alter_table('user_agreements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_agreements_is_active'))

    op.drop_table('user_agreements')
    with op.batch_alter_table('privacy_policies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_privacy_policies_is_active'))

    op.drop_table('privacy_policies')
    # ### end Alembic commands ###
